<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<Style x:Key="GridSplitterPreviewStyle">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Fill="#80000000"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Color x:Key="bgGreenGradientTheme">#FF43CD1A</Color>

	<Style x:Key="GridSplitterStyle" TargetType="{x:Type GridSplitter}">
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
		<Setter Property="PreviewStyle" Value="{StaticResource GridSplitterPreviewStyle}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type GridSplitter}">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="0,0,-5,0" Width="10" HorizontalAlignment="Center" VerticalAlignment="Center">
						<Grid Margin="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Height="58.378">
							<Ellipse HorizontalAlignment="Center" Height="6" Margin="0" VerticalAlignment="Center" Width="6">
								<Ellipse.Fill>
									<RadialGradientBrush Center="0.608,0.496" GradientOrigin="0.414,0.297" RadiusY="0.76255163759577627" RadiusX="0.76255163759577627">
										<GradientStop Color="{DynamicResource bgGreenGradientTheme}" Offset="0.339"/>
										<GradientStop Color="White" Offset="1"/>
									</RadialGradientBrush>
								</Ellipse.Fill>
								<Ellipse.Stroke>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="Black" Offset="0"/>
										<GradientStop Color="{DynamicResource bgGreenGradientTheme}" Offset="1"/>
									</LinearGradientBrush>
								</Ellipse.Stroke>
							</Ellipse>
							<Ellipse HorizontalAlignment="Center" Height="6" Margin="2,52.378,2,0" VerticalAlignment="Center" Width="6">
								<Ellipse.Fill>
									<RadialGradientBrush Center="0.608,0.496" GradientOrigin="0.414,0.297" RadiusY="0.76255163759577627" RadiusX="0.76255163759577627">
										<GradientStop Color="{DynamicResource bgGreenGradientTheme}" Offset="0.339"/>
										<GradientStop Color="White" Offset="1"/>
									</RadialGradientBrush>
								</Ellipse.Fill>
								<Ellipse.Stroke>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="Black" Offset="0"/>
										<GradientStop Color="{DynamicResource bgGreenGradientTheme}" Offset="1"/>
									</LinearGradientBrush>
								</Ellipse.Stroke>
							</Ellipse>
							<Ellipse HorizontalAlignment="Center" Height="6" Margin="2,0,2,52.378" VerticalAlignment="Center" Width="6">
								<Ellipse.Fill>
									<RadialGradientBrush Center="0.608,0.496" GradientOrigin="0.414,0.297" RadiusY="0.76255163759577627" RadiusX="0.76255163759577627">
										<GradientStop Color="{DynamicResource bgGreenGradientTheme}" Offset="0.339"/>
										<GradientStop Color="White" Offset="1"/>
									</RadialGradientBrush>
								</Ellipse.Fill>
								<Ellipse.Stroke>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="Black" Offset="0"/>
										<GradientStop Color="{DynamicResource bgGreenGradientTheme}" Offset="1"/>
									</LinearGradientBrush>
								</Ellipse.Stroke>
							</Ellipse>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#F3F3F3" Offset="0"/>
        <GradientStop Color="#EBEBEB" Offset="0.5"/>
        <GradientStop Color="#DDDDDD" Offset="0.5"/>
        <GradientStop Color="#CDCDCD" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
    <Style x:Key="btnExit" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid" HorizontalAlignment="Center" Height="24" VerticalAlignment="Center" Width="48" Background="#FFA21C1C" Margin="0">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                            <EasingColorKeyFrame KeyTime="0" Value="#FFE01111"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="path">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.9"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="path">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.9"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path x:Name="path" Data="M0.50000001,0.50000001 L15.5,15.5 M15.5,0.50000062 L0.50000011,15.5" Fill="#FFF4F4F5" HorizontalAlignment="Stretch" Height="10" Margin="19,8.417,19,5.582" Stretch="Fill" Stroke="White" VerticalAlignment="Stretch" Width="10" RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true"/>
                        <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="btnCommand" TargetType="{x:Type Button}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
		<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid x:Name="grid" Margin="0" RenderTransformOrigin="0.5,0.5">
						<Grid.RenderTransform>
							<TransformGroup>
								<ScaleTransform/>
								<SkewTransform/>
								<RotateTransform/>
								<TranslateTransform/>
							</TransformGroup>
						</Grid.RenderTransform>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background)" Storyboard.TargetName="grid">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<SolidColorBrush Color="#FF3FAC2F"/>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.9"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="grid">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0.9"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.345"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border BorderBrush="White" BorderThickness="1" HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto"/>
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsKeyboardFocused" Value="true"/>
						<Trigger Property="ToggleButton.IsChecked" Value="true"/>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="#ADADAD"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ButtonGreen" TargetType="{x:Type Button}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid x:Name="grid" RenderTransformOrigin="0.5,0.5" Cursor="Hand">
						<Grid.RenderTransform>
							<TransformGroup>
								<ScaleTransform/>
								<SkewTransform/>
								<RotateTransform/>
								<TranslateTransform/>
							</TransformGroup>
						</Grid.RenderTransform>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ReflectionLayer">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="RefractionLayer">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="RefractionLayer">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.75"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ReflectionLayer">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.75"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.9"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="grid">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.9"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.02"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="RefractionLayer">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ReflectionLayer">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<!-- Background Layer -->
						<Ellipse x:Name="ellipse" Fill="Lime"/>
						<!-- Refraction Layer -->
						<Ellipse x:Name="RefractionLayer">
							<Ellipse.Fill>
								<RadialGradientBrush GradientOrigin="0.496,1.052">
									<RadialGradientBrush.RelativeTransform>
										<TransformGroup>
											<ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
											<TranslateTransform X="0.02" Y="0.3"/>
										</TransformGroup>
									</RadialGradientBrush.RelativeTransform>
									<GradientStop Offset="1" Color="#00000000"/>
									<GradientStop Offset="0.4" Color="#FFFFFFFF"/>
								</RadialGradientBrush>
							</Ellipse.Fill>
						</Ellipse>
						<!-- Reflection Layer -->
						<Path x:Name="ReflectionLayer" VerticalAlignment="Top" Stretch="Fill">
							<Path.RenderTransform>
								<ScaleTransform ScaleY="0.5" />
							</Path.RenderTransform>
							<Path.Data>
								<PathGeometry>
									<PathFigure IsClosed="True" StartPoint="98.999,45.499">
										<BezierSegment Point1="98.999,54.170" Point2="89.046,52.258" Point3="85.502,51.029"/>
										<BezierSegment
											IsSmoothJoin="True"
											Point1="75.860,47.685"
											Point2="69.111,45.196"
											Point3="50.167,45.196"/>
										<BezierSegment Point1="30.805,45.196" Point2="20.173,47.741" Point3="10.665,51.363"/>
										<BezierSegment
											IsSmoothJoin="True"
											Point1="7.469,52.580"
											Point2="1.000,53.252"
											Point3="1.000,44.999"/>
										<BezierSegment Point1="1.000,39.510" Point2="0.884,39.227" Point3="2.519,34.286"/>
										<BezierSegment
											IsSmoothJoin="True"
											Point1="9.106,14.370"
											Point2="27.875,0"
											Point3="50,0"/>
										<BezierSegment Point1="72.198,0" Point2="91.018,14.466" Point3="97.546,34.485"/>
										<BezierSegment
											IsSmoothJoin="True"
											Point1="99.139,39.369"
											Point2="98.999,40.084"
											Point3="98.999,45.499"/>
									</PathFigure>
								</PathGeometry>
							</Path.Data>
							<Path.Fill>
								<RadialGradientBrush GradientOrigin="0.498,0.526">
									<RadialGradientBrush.RelativeTransform>
										<TransformGroup>
											<ScaleTransform
												CenterX="0.5"
												CenterY="0.5"
												ScaleX="1"
												ScaleY="1.997"/>
											<TranslateTransform X="0" Y="0.5"/>
										</TransformGroup>
									</RadialGradientBrush.RelativeTransform>
									<GradientStop Offset="1" Color="#FFFFFFFF"/>
									<GradientStop Offset="0.85" Color="#92FFFFFF"/>
									<GradientStop Offset="0" Color="#00000000"/>
								</RadialGradientBrush>
							</Path.Fill>
						</Path>
						<!-- ContentPresenter -->
						<ContentPresenter x:Name="contentPresenter" Margin="0,2,0,0" HorizontalAlignment="Center" VerticalAlignment="Center">
							<ContentPresenter.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</ContentPresenter.RenderTransform>
						</ContentPresenter>


					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="RefractionLayer" Property="Fill">
								<Setter.Value>
									<RadialGradientBrush GradientOrigin="0.496,1.052">
										<RadialGradientBrush.RelativeTransform>
											<TransformGroup>
												<ScaleTransform
													CenterX="0.5"
													CenterY="0.5"
													ScaleX="1.5"
													ScaleY="1.5"/>
												<TranslateTransform X="0.02" Y="0.3"/>
											</TransformGroup>
										</RadialGradientBrush.RelativeTransform>
										<GradientStop Offset="1" Color="#00000000"/>
										<GradientStop Offset="0.45" Color="#FFFFFFFF"/>
									</RadialGradientBrush>
								</Setter.Value>
							</Setter>
							<Setter TargetName="ReflectionLayer" Property="Fill">
								<Setter.Value>
									<RadialGradientBrush GradientOrigin="0.498,0.526">
										<RadialGradientBrush.RelativeTransform>
											<TransformGroup>
												<ScaleTransform
													CenterX="0.5"
													CenterY="0.5"
													ScaleX="1"
													ScaleY="1.997"/>
												<TranslateTransform X="0" Y="0.5"/>
											</TransformGroup>
										</RadialGradientBrush.RelativeTransform>
										<GradientStop Offset="1" Color="#FFFFFFFF"/>
										<GradientStop Offset="0.85" Color="#BBFFFFFF"/>
										<GradientStop Offset="0" Color="#00000000"/>
									</RadialGradientBrush>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="RefractionLayer" Property="Fill">
								<Setter.Value>
									<RadialGradientBrush GradientOrigin="0.496,1.052">
										<RadialGradientBrush.RelativeTransform>
											<TransformGroup>
												<ScaleTransform
													CenterX="0.5"
													CenterY="0.5"
													ScaleX="1.5"
													ScaleY="1.5"/>
												<TranslateTransform X="0.02" Y="0.3"/>
											</TransformGroup>
										</RadialGradientBrush.RelativeTransform>
										<GradientStop Offset="1" Color="#00000000"/>
										<GradientStop Offset="0.3" Color="#FFFFFFFF"/>
									</RadialGradientBrush>
								</Setter.Value>
							</Setter>
							<Setter TargetName="ReflectionLayer" Property="Fill">
								<Setter.Value>
									<RadialGradientBrush GradientOrigin="0.498,0.526">
										<RadialGradientBrush.RelativeTransform>
											<TransformGroup>
												<ScaleTransform
													CenterX="0.5"
													CenterY="0.5"
													ScaleX="1"
													ScaleY="1.997"/>
												<TranslateTransform X="0" Y="0.5"/>
											</TransformGroup>
										</RadialGradientBrush.RelativeTransform>
										<GradientStop Offset="1" Color="#CCFFFFFF"/>
										<GradientStop Offset="0.85" Color="#66FFFFFF"/>
										<GradientStop Offset="0" Color="#00000000"/>
									</RadialGradientBrush>
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ButtonRed" TargetType="{x:Type Button}">
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="OverridesDefaultStyle" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid x:Name="grid" RenderTransformOrigin="0.5,0.5">
						<Grid.RenderTransform>
							<TransformGroup>
								<ScaleTransform/>
								<SkewTransform/>
								<RotateTransform/>
								<TranslateTransform/>
							</TransformGroup>
						</Grid.RenderTransform>

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ReflectionLayer">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="RefractionLayer">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ReflectionLayer">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.75"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.75"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="RefractionLayer">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.75"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0.75"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="ellipse">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
											<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="grid">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.9"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="grid">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.9"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="contentPresenter">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="ellipse">
											<EasingColorKeyFrame KeyTime="0" Value="Black"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<!-- Background Layer -->
						<Ellipse x:Name="ellipse" Fill="Red"/>
						<!-- Refraction Layer -->
						<Ellipse x:Name="RefractionLayer">
							<Ellipse.Fill>
								<RadialGradientBrush GradientOrigin="0.496,1.052">
									<RadialGradientBrush.RelativeTransform>
										<TransformGroup>
											<ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.5" ScaleY="1.5"/>
											<TranslateTransform X="0.02" Y="0.3"/>
										</TransformGroup>
									</RadialGradientBrush.RelativeTransform>
									<GradientStop Offset="1" Color="#00000000"/>
									<GradientStop Offset="0.4" Color="#FFFFFFFF"/>
								</RadialGradientBrush>
							</Ellipse.Fill>
						</Ellipse>
						<!-- Reflection Layer -->
						<Path x:Name="ReflectionLayer" VerticalAlignment="Top" Stretch="Fill">
							<Path.RenderTransform>
								<ScaleTransform ScaleY="0.5" />
							</Path.RenderTransform>
							<Path.Data>
								<PathGeometry>
									<PathFigure IsClosed="True" StartPoint="98.999,45.499">
										<BezierSegment Point1="98.999,54.170" Point2="89.046,52.258" Point3="85.502,51.029"/>
										<BezierSegment
											IsSmoothJoin="True"
											Point1="75.860,47.685"
											Point2="69.111,45.196"
											Point3="50.167,45.196"/>
										<BezierSegment Point1="30.805,45.196" Point2="20.173,47.741" Point3="10.665,51.363"/>
										<BezierSegment
											IsSmoothJoin="True"
											Point1="7.469,52.580"
											Point2="1.000,53.252"
											Point3="1.000,44.999"/>
										<BezierSegment Point1="1.000,39.510" Point2="0.884,39.227" Point3="2.519,34.286"/>
										<BezierSegment
											IsSmoothJoin="True"
											Point1="9.106,14.370"
											Point2="27.875,0"
											Point3="50,0"/>
										<BezierSegment Point1="72.198,0" Point2="91.018,14.466" Point3="97.546,34.485"/>
										<BezierSegment
											IsSmoothJoin="True"
											Point1="99.139,39.369"
											Point2="98.999,40.084"
											Point3="98.999,45.499"/>
									</PathFigure>
								</PathGeometry>
							</Path.Data>
							<Path.Fill>
								<RadialGradientBrush GradientOrigin="0.498,0.526">
									<RadialGradientBrush.RelativeTransform>
										<TransformGroup>
											<ScaleTransform
												CenterX="0.5"
												CenterY="0.5"
												ScaleX="1"
												ScaleY="1.997"/>
											<TranslateTransform X="0" Y="0.5"/>
										</TransformGroup>
									</RadialGradientBrush.RelativeTransform>
									<GradientStop Offset="1" Color="#FFFFFFFF"/>
									<GradientStop Offset="0.85" Color="#92FFFFFF"/>
									<GradientStop Offset="0" Color="#00000000"/>
								</RadialGradientBrush>
							</Path.Fill>
						</Path>
						<!-- ContentPresenter -->
						<ContentPresenter x:Name="contentPresenter" Margin="0,2,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5">
							<ContentPresenter.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</ContentPresenter.RenderTransform>
						</ContentPresenter>


					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="RefractionLayer" Property="Fill">
								<Setter.Value>
									<RadialGradientBrush GradientOrigin="0.496,1.052">
										<RadialGradientBrush.RelativeTransform>
											<TransformGroup>
												<ScaleTransform
													CenterX="0.5"
													CenterY="0.5"
													ScaleX="1.5"
													ScaleY="1.5"/>
												<TranslateTransform X="0.02" Y="0.3"/>
											</TransformGroup>
										</RadialGradientBrush.RelativeTransform>
										<GradientStop Offset="1" Color="#00000000"/>
										<GradientStop Offset="0.45" Color="#FFFFFFFF"/>
									</RadialGradientBrush>
								</Setter.Value>
							</Setter>
							<Setter TargetName="ReflectionLayer" Property="Fill">
								<Setter.Value>
									<RadialGradientBrush GradientOrigin="0.498,0.526">
										<RadialGradientBrush.RelativeTransform>
											<TransformGroup>
												<ScaleTransform
													CenterX="0.5"
													CenterY="0.5"
													ScaleX="1"
													ScaleY="1.997"/>
												<TranslateTransform X="0" Y="0.5"/>
											</TransformGroup>
										</RadialGradientBrush.RelativeTransform>
										<GradientStop Offset="1" Color="#FFFFFFFF"/>
										<GradientStop Offset="0.85" Color="#BBFFFFFF"/>
										<GradientStop Offset="0" Color="#00000000"/>
									</RadialGradientBrush>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="RefractionLayer" Property="Fill">
								<Setter.Value>
									<RadialGradientBrush GradientOrigin="0.496,1.052">
										<RadialGradientBrush.RelativeTransform>
											<TransformGroup>
												<ScaleTransform
													CenterX="0.5"
													CenterY="0.5"
													ScaleX="1.5"
													ScaleY="1.5"/>
												<TranslateTransform X="0.02" Y="0.3"/>
											</TransformGroup>
										</RadialGradientBrush.RelativeTransform>
										<GradientStop Offset="1" Color="#00000000"/>
										<GradientStop Offset="0.3" Color="#FFFFFFFF"/>
									</RadialGradientBrush>
								</Setter.Value>
							</Setter>
							<Setter TargetName="ReflectionLayer" Property="Fill">
								<Setter.Value>
									<RadialGradientBrush GradientOrigin="0.498,0.526">
										<RadialGradientBrush.RelativeTransform>
											<TransformGroup>
												<ScaleTransform
													CenterX="0.5"
													CenterY="0.5"
													ScaleX="1"
													ScaleY="1.997"/>
												<TranslateTransform X="0" Y="0.5"/>
											</TransformGroup>
										</RadialGradientBrush.RelativeTransform>
										<GradientStop Offset="1" Color="#CCFFFFFF"/>
										<GradientStop Offset="0.85" Color="#66FFFFFF"/>
										<GradientStop Offset="0" Color="#00000000"/>
									</RadialGradientBrush>
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>
